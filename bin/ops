#!/usr/bin/env ruby
# frozen_string_literal: true

start_time = Process.clock_gettime(Process::CLOCK_MONOTONIC)

require_relative '../lib/profiler'
require 'optparse'

def usage
	puts "Usage: ops [-f|--file <ops_yml>] action [<action args>"
	puts "  ops_yml:      the config file to load instead of './ops.yml'"
	puts "  action_args:  arguments to the action loaded from the config file; depends on the action"

	exit(1)
end

options = {}
status = -1

while ARGV[0]&.match(/^-/)
	opt = ARGV.shift
	case opt
	when '-f', '--file'
		usage unless ARGV.length >= 1

		options[:file] = ARGV.shift
	else
		usage
	end
end

Profiler.measure("bin:require") do
	require_relative "../loader"
end

Profiler.measure("bin:run") do
	status = Ops.new(ARGV, config_file: options[:file]).run
end

Profiler.add_measurement("bin:all", Process.clock_gettime(Process::CLOCK_MONOTONIC) - start_time)
Output.error(Profiler.summary) if Profiler.summary
exit status
