dependencies:
  gem:
    - bundler =2.2.22
    - rerun
    - ejson
  custom:
    - bundle install --quiet
forwards:
  p: platforms
actions:
  test:
    command: environment=test bundle exec rspec --exclude-pattern 'spec/e2e/**/*_spec.rb'
    alias: t
    description: runs unit tests
  test-watch:
    command: rerun --no-notify -x bin/ops test
    alias: tw
    description: runs unit tests every time a file changes
  test-e2e:
    command: bundle exec rspec spec/e2e/e2e_spec_helper.rb spec/e2e
    alias: e2e
    not_in_envs:
      - production
  test-e2e-watch:
    command: rerun --no-notify -x ops test-e2e
    alias: ew
  tag:
    command: "bin/tag"
    description: tags the branch in git with the version from the gemspec
  build:
    command: gem build ops_team.gemspec
    alias: b
    description: builds the ops_team gem
  latest-gem-file:
    command: ls -t ops_team-*.gem | head -n 1
    alias: latest
  install:
    command: gem i `ops latest-gem-file`
    alias: i
    description: installs the ops_team gem from a local gemfile
  build-and-install:
    command: bin/ops b && bin/ops i
    alias: bi
    description: builds and installs the ops_team gem
  push:
    command: gem push `ls -t ops_team-*.gem | head -n 1`
    description: pushes the latest local .gem file to rubygems.org
  yank:
    command: gem yank ops_team
    description: yanks the gem with the given version from rubygems.org
  lint:
    command: bundle exec rubocop --safe-auto-correct
    alias: l
    description: runs rubocop with safe autocorrect
  secrets:
    command: bin/print_secrets
    load_secrets: true
    description: prints secrets from environment variables
  config:
    command: bin/print_config
    description: prints config from environment variables
  test-bg:
    command: echo this is stdout; echo 1>&2 this is stderr; echo this is stdout again; echo 1>&2 this is stderr again
  rough:
    command: "echo that is rough"
  some_long_method_name:
    command: "echo hi there"
  install-nodejs:
    command: nvm install 14
    skip_in_envs: [ci]
options:
  gem:
    use_sudo: false
    user_install: false
  config:
    path: "config/$environment/other_config.json"
  secrets:
    path: "config/$environment/other_secrets.ejson"
  exec:
    load_secrets: true
  environment:
    EJSON_KEYDIR: "./spec/ejson_keys"
    NAMESPACE: "$USER-$environment"
  environment_aliases:
    - environment
    - ENV
    - RAILS_ENV
  sshkey:
    load_secrets: true
    key_size: 1024
    passphrase_var: SSH_KEY_PASSPHRASE
  background:
    log_filename: ./bglog
  apt:
    use_sudo: false
  up:
    fail_on_error: true
